## AI Visitor 对话系统 - 产品需求文档 (PRD) v3.0

### 1. 简介与目标

项目名称: AI Visitor 长期对话模拟系统

目标: 创建一个先进的AI训练工具，允许人类用户与一个具备持续性记忆和人格演化的AI访客，进行长达数月的、高度仿真的CBT咨询练习。本系统的核心在于模拟“历时性”，即AI访客的状态会随着每一次对话和生活模拟而真实演变。

### 2. 角色与权限（更新）
- 角色：student / assistant_tech / assistant_class / admin
- 鉴权：白名单邮箱 + 验证码登录，后端签发 JWT（7 天有效）。
- 视图与数据范围：
  - student：仅访问自己的 visitor instance 与会话、作业、三联表
  - assistant_tech：访问绑定的学生范围（assistant_students）
  - assistant_class：按 classId 查看本班学生与会话（只读），用于进度监督与告警
  - admin：全局访问

### 3. 前端对接要点（更新）
- 登录：
  - POST /auth/request-code → POST /auth/verify-code → 保存 token
  - 请求统一携带 Authorization: Bearer <token>
- 对话训练：
  - 开始：POST /sessions/start → sessionId
  - 聊天：POST /sessions/{id}/messages（逐条）
  - 结束：POST /sessions/{id}/finalize（assignment 文本）
  - 历史：GET /sessions/list、GET /sessions/{id}、GET /sessions/last（仅 chat）
- 作业与互动：
  - 学生：GET /assignments/list（按实例汇总）
  - 三联表：POST/GET /thought-records
  - 提问：POST/GET /questions
  - 技术助教反馈：POST/GET /assistant/feedback
- 行政助教：
  - GET /assistant-class/students、GET /assistant-class/students/{studentId}/sessions

### 4. 数据表（更新摘要）
- users(id, email, name, userId: bigint, role, classId: bigint, status)
- visitor_templates(id, templateKey, corePersona, chatPrinciple)
- visitor_instances(id, userId→users.id, templateId, longTermMemory)
- sessions(id, visitorInstanceId, sessionNumber, chatHistory, homework, sessionDiary, preSessionActivity)
- assistant_students(id, assistantId→users.id, studentId→users.id, visitorInstanceId)
- thought_records(id, sessionId→sessions.id, ...)
- questions(id, sessionId, studentId, content, ...)
- assistant_feedbacks(id, sessionId, assistantId, content, ...)
- whitelist_emails(email, name, userId: bigint, role, classId: bigint, assignedTechAsst, assignedClassAsst, assignedVisitor, inchargeVisitor, studentCount, status)

### 5. 告警（预留）
- 行政助教：监控本班学生在每周“结束对话”后是否提交三联表与作业；若低于阈值，生成告警（后续迭代）。
